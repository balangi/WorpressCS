using System;
using System.Collections.Generic;
using Microsoft.Extensions.DependencyInjection;
using WordPress.Core.Data;
using WordPress.Core.BlockBindings;

class Program
{
    static void Main()
    {
        var serviceProvider = new ServiceCollection()
            .AddDbContext<AppDbContext>()
            .BuildServiceProvider();

        var dbContext = serviceProvider.GetService<AppDbContext>();
        var registry = BlockBindingsRegistry.GetInstance(dbContext);

        var sourceProperties = new Dictionary<string, object>
        {
            { "label", "Custom Source" },
            { "get_value_callback", new Func<object>(() => "Custom Value") },
            { "uses_context", new List<string> { "context1", "context2" } }
        };

        var source = registry.Register("my-plugin/my-custom-source", sourceProperties);

        Console.WriteLine($"Registered Source: {source.SourceName}");

        var allSources = registry.GetAllRegistered();
        foreach (var registeredSource in allSources)
        {
            Console.WriteLine($"Source Name: {registeredSource.Key}, Label: {registeredSource.Value.Label}");
        }
    }
}