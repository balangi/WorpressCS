using Microsoft.AspNetCore.Mvc;
using System.Threading.Tasks;

[ApiController]
[Route("api/[controller]")]
public class CategoriesController : ControllerBase
{
    private readonly CategoryService _categoryService;

    public CategoriesController(CategoryService categoryService)
    {
        _categoryService = categoryService;
    }

    [HttpGet]
    public async Task<IActionResult> GetCategories()
    {
        var categories = await _categoryService.GetCategoriesAsync();
        return Ok(categories);
    }

    [HttpGet("{id}")]
    public async Task<IActionResult> GetCategory(int id)
    {
        var category = await _categoryService.GetCategoryAsync(id);
        if (category == null)
            return NotFound();
            
        return Ok(category);
    }

    [HttpGet("bypath/{*path}")]
    public async Task<IActionResult> GetCategoryByPath(string path, [FromQuery] bool fullMatch = true)
    {
        var category = await _categoryService.GetCategoryByPathAsync(path, fullMatch);
        if (category == null)
            return NotFound();
            
        return Ok(category);
    }

    [HttpGet("byslug/{slug}")]
    public async Task<IActionResult> GetCategoryBySlug(string slug)
    {
        var category = await _categoryService.GetCategoryBySlugAsync(slug);
        if (category == null)
            return NotFound();
            
        return Ok(category);
    }
}