using System;
using System.Collections.Generic;
using System.Text;
using Microsoft.Extensions.DependencyInjection;
using WordPress.Core.Data;
using WordPress.Core.Comments;

class Program
{
    static void Main()
    {
        var serviceProvider = new ServiceCollection()
            .AddDbContext<AppDbContext>()
            .BuildServiceProvider();

        var dbContext = serviceProvider.GetService<AppDbContext>();
        var walker = new WalkerComment(dbContext);

        var comments = dbContext.Comments
            .Include(c => c.Children)
            .ToList();

        var output = new StringBuilder();
        foreach (var comment in comments)
        {
            walker.StartElement(output, comment, 0, new Dictionary<string, object>
            {
                { "style", "ul" }
            });
        }

        Console.WriteLine(output.ToString());
    }
}using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;

namespace WordPress.Core.Models
{
    public class MenuItem
    {
        [Key]
        public int Id { get; set; }

        public string Title { get; set; }
        public string Url { get; set; }
        public int? ParentId { get; set; }

        // Navigation property for parent-child relationship
        public virtual MenuItem Parent { get; set; }
        public virtual ICollection<MenuItem> Children { get; set; } = new List<MenuItem>();
    }
}